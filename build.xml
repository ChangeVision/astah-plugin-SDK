<?xml version="1.0" encoding="utf-8"?>
<project name="astah* plug-in SDK" default="make_zip">

  <property name="target" location="target"/>
  <property name="maven-binaries" location="maven-binary"/>
  <property name="maven-dir-name" value="apache-maven-3.0.4"/>
  <property name="based-maven-binaries" location="${maven-binaries}/${maven-dir-name}-bin.zip"/>
  <property name="artifact-name" value="astah-plugin-SDK"/>
  <property name="version" value="1.1"/>
  <property name="complete-name" value="${artifact-name}-${version}"/>
  <property name="distbase" value="${target}/${complete-name}"/>
  <property name="bundles" location="${distbase}/bundles"/>

  <property name="astah-maven-plugin-tag" value="astah-maven-plugin-1.0.0"/>

  <tstamp>
    <format property="now" pattern="yyyyMMddHHmmss" />
  </tstamp>

  <!-- Specify maven executable name -->
  <condition property="mvn.executable" value="mvn.bat">
    <os family="windows"/>
  </condition>
  <condition property="mvn.executable" value="mvn">
    <os family="unix"/>
  </condition>

  <macrodef name="mvn" description="launch maven">
    <attribute name="mvn.executable" default="${mvn.executable}"/>
    <attribute name="argLine"/>
    <attribute name="working"/>
    <sequential>
      <exec failonerror="true" executable="@{mvn.executable}" dir="@{working}">
        <arg line="@{argLine}"/>
      </exec>
    </sequential>
  </macrodef>

  <macrodef name="checkout" description="checkout specified source code">
    <attribute name="connectionUrl"/>
    <attribute name="checkoutDir"/>
    <attribute name="working" default="."/>
    <sequential>
      <mvn argLine=" scm:checkout -DconnectionUrl=@{connectionUrl} -DcheckoutDirectory=@{checkoutDir}"
        working="@{working}"/>
    </sequential>
  </macrodef>

  <macrodef name="checkout_with_tag" description="checkout specified source code with tag">
    <attribute name="connectionUrl"/>
    <attribute name="checkoutDir"/>
    <attribute name="tag"/>
    <attribute name="working" default="."/>
    <sequential>
      <mvn argLine=" scm:checkout -DconnectionUrl=@{connectionUrl} -DcheckoutDirectory=@{checkoutDir} -DscmVersionType=tag -DscmVersion=@{tag}"
        working="@{working}"/>
    </sequential>
  </macrodef>

  <macrodef name="build_astah_maven_plugin" description="build_astah_maven_plugin">
    <attribute name="version"/>
    <sequential>
    <checkout_with_tag
      connectionUrl="scm:git:https://github.com/ChangeVision/astah-maven-plugin.git"
      checkoutDir="${target}/astah-maven-plugin-@{version}"
      tag="astah-maven-plugin-@{version}"/>
    <antcall target="build_plugin">
      <param name="working" value="${target}/astah-maven-plugin-@{version}"/>
    </antcall>
    </sequential>
  </macrodef>

  <macrodef name="dchmod">
    <attribute name="target"/>
    <attribute name="perm" default="744"/>
    <sequential>
      <chmod file="@{target}" perm="@{perm}" type="both" verbose="true"/>
    </sequential>
  </macrodef>

  <target name="clean">
     <delete dir="${target}"/>
  </target>

  <target name="make_zip" depends="clean" description="create astah* SDK zip">
    <echo>start making zip</echo>
    <mkdir dir="${target}" />
    <antcall target="get_maven"/>
    <move file="${target}/${maven-dir-name}" tofile="${distbase}"/>
    <move file="${distbase}/README.txt" tofile="${distbase}/MAVEN_README.txt"/>
    <delete>
      <fileset dir="${distbase}/bin">
        <include name="mvn*"/>
      </fileset>
    </delete>
    <antcall target="copy_resource">
      <param name="dirname" value="bin"/>
    </antcall>
    <antcall target="copy_resource">
      <param name="dirname" value="conf"/>
    </antcall>
    <antcall target="make_repository">
      <param name="dirname" value="repository"/>
    </antcall>
    <antcall target="make_bundle_plugins"/>
    <antcall target="make_tutorials"/>
    <antcall target="make_example"/>
    <antcall target="get_javadoc"/>
    <echo file="${distbase}/CREATED" message="BUILD:${now}"/>
    <fixcrlf srcdir="${distbase}/bin" eol="lf"/>
    <fixcrlf srcdir="${distbase}/bin" includes="**/*.bat" eol="crlf"/>
    <dchmod target="${distbase}/bin/*"
      perm="766"/>
    <dchmod
      target="${distbase}/bin/*.bat"
      perm="666"/>
    <dchmod
      target="${distbase}/bin/*.conf"
      perm="666"/>
    <antcall target="create_zip"/>
    <echo>end making zip</echo>
  </target>

  <target name="get_maven">
    <get src="http://archive.apache.org/dist/maven/binaries/apache-maven-3.0.4-bin.zip" dest="maven-binary" skipexisting="true"/>
    <unzip src="${based-maven-binaries}" dest="${target}"/>
  </target>

  <target name="get_javadoc">
    <get src="http://members.change-vision.com/javadoc/astah-api/latest/javadoc.zip" dest="target/javadoc.zip" skipexisting="true"/>
    <unzip src="target/javadoc.zip" dest="${distbase}/javadoc"/>
  </target>

  <target name="create_zip">
    <exec executable="zip" dir="${target}" osfamily="unix">
      <arg value="-r"/>
      <arg value="${distbase}.zip"/>
      <arg value="${complete-name}"/>
    </exec>
    <exec executable="buildtools/zip.exe" dir="${target}" osfamily="windows">
      <arg value="-r"/>
      <arg value="${distbase}.zip"/>
      <arg value="${complete-name}"/>
    </exec>
  </target>

  <target name="make_repository">
    <delete dir="${java.io.tmpdir}/${artifact-name}/repository"/>
    <build_astah_maven_plugin version="1.0.0"/>
    <build_astah_maven_plugin version="0.9.3"/>
    <checkout_with_tag
      connectionUrl="svm:git:https://github.com/ChangeVision/astah-plugin-archetype-plugin.git"
      checkoutDir="${target}/archetype"
      tag="plugin-archetype-1.0.0"/>
    <antcall target="build_plugin">
      <param name="working" value="${target}/archetype"/>
    </antcall>
    <checkout
      connectionUrl="svm:git:https://github.com/ChangeVision/astah-plugin-groovy-archetype-plugin.git"
      checkoutDir="${target}/groovy-archetype"/>
    <antcall target="build_plugin">
      <param name="working" value="${target}/groovy-archetype"/>
    </antcall>
    <antcall target="copy_specific_resource">
      <param name="distdirname" value="repository"/>
      <param name="srcdirname" value="${java.io.tmpdir}/${artifact-name}/repository"/>
    </antcall>
    <copy todir="${distbase}/" overwrite="true">
      <fileset dir="doc">
        <include name="*.asta"/>
      </fileset>
    </copy>
    <antcall target="copy_resource">
      <param name="dirname" value="repository"/>
    </antcall>
  </target>

  <target name="make_bundle_plugins" description="build bundle plugins for developer">
    <mkdir dir="${bundles}"/>
    <antcall target="build_bundle_plugin">
      <param name="plugin_name" value="astah-console-plugin.git"/>
      <param name="working" value="${target}/astah-console-plugin.git"/>
    </antcall>
  </target>

  <target name="build_bundle_plugin">
    <checkout
      connectionUrl="scm:git:https://github.com/ChangeVision/astah-console-plugin.git/"
      checkoutDir="${target}/${plugin_name}"/>
    <mvn argLine=" package" working="${working}"/>
    <copy todir="${bundles}">
      <fileset dir="${working}/target/" includes="*.jar"/>
    </copy>
  </target>

  <target name="build_plugin">
    <mvn argLine=" deploy -DaltDeploymentRepository=local::default::file://${java.io.tmpdir}/astah-plugin-SDK/repository"
    working="${working}"/>
  </target>

  <target name="make_example">
    <mkdir dir="${distbase}/examples" />
    <checkout
      connectionUrl="svm:git:https://github.com/ChangeVision/astah-example-plugin.git"
      checkoutDir="${distbase}/examples/tutorialsample"/>
    <checkout
      connectionUrl="svm:git:https://github.com/ChangeVision/astah-drag_and_drop_example-plugin.git"
      checkoutDir="${distbase}/examples/drag_and_drop_sample"/>
  </target>

  <target name="make_tutorials" description="create tutorials html">
    <antcall target="make_tutorial">
      <param name="lang" value="ja"/>
    </antcall>
    <antcall target="make_tutorial">
      <param name="lang" value="en"/>
    </antcall>
  </target>

  <target name="make_tutorial">
    <checkout
      connectionUrl="scm:git:https://github.com/ChangeVision/astah-plugin-tutorial-${lang}.git/"
      checkoutDir="target/tutorial-${lang}"/>
    <antcall target="run_sphinx">
      <param name="working" value="target/tutorial-${lang}" />
      <param name="command" value="html" />
    </antcall>
    <antcall target="copy_specific_resource">
      <param name="srcdirname" value="target/tutorial-${lang}/build/html"/>
      <param name="distdirname" value="tutorial/${lang}"/>
    </antcall>
  </target>

  <target name="run_sphinx">
    <antcall target="run_sphinx_unix">
      <param name="working" value="${working}"/>
      <param name="command" value="${command}"/>
    </antcall>
    <antcall target="run_sphinx_windows">
      <param name="working" value="${working}"/>
      <param name="command" value="${command}" />
    </antcall>
  </target>

  <target name="run_sphinx_unix">
    <exec executable="make" dir="${working}" osfamily="unix">
      <arg value="clean"/>
    </exec>
    <exec executable="make" dir="${working}" osfamily="unix">
      <arg value="${command}"/>
    </exec>
  </target>

  <target name="run_sphinx_windows">
    <exec executable="cmd" dir="${working}" osfamily="windows">
      <arg value="/c"/>
      <arg value="make.bat"/>
      <arg value="clean"/>
    </exec>
    <exec executable="cmd" dir="${working}" osfamily="windows">
      <arg value="/c"/>
      <arg value="make.bat"/>
      <arg value="html"/>
    </exec>
  </target>

  <target name="copy_resource">
    <antcall target="copy_specific_resource">
      <param name="srcdirname" value="${dirname}"/>
      <param name="distdirname" value="${dirname}"/>
    </antcall>
  </target>

  <target name="copy_specific_resource">
    <copy todir="${distbase}/${distdirname}" overwrite="true">
      <fileset dir="${srcdirname}">
        <include name="**/**"/>
      </fileset>
    </copy>
  </target>
</project>
